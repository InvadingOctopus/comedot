[gd_resource type="Resource" script_class="Upgrade" load_steps=5 format=3 uid="uid://dx7wulxv0xiwv"]

[ext_resource type="Resource" uid="uid://cs65uuef7fi0x" path="res://Tests/UpgradeTest/UpgradeTestMoneyStat.tres" id="1_6lk0n"]
[ext_resource type="Script" path="res://Resources/Upgrade.gd" id="2_huadx"]
[ext_resource type="Resource" uid="uid://ha75hcisu4qg" path="res://Tests/UpgradeTest/UpgradeTestGunUpgrade.tres" id="4_i0e1k"]

[sub_resource type="GDScript" id="GDScript_5bfy2"]
script/source = "func onUpgrade_didAcquireOrLevelUp(upgrade: Upgrade, entity: Entity) -> bool:
	Debug.printLog(str(\"onUpgrade_didAcquireOrLevelUp() upgrade: \", upgrade, \", entity: \", entity), str(self))
	entity.getComponent(GunComponent).cooldown -= 0.2
	return true
"

[resource]
script = ExtResource("2_huadx")
name = &"cooldown"
displayName = "COOLDOWN"
payload = SubResource("GDScript_5bfy2")
description = ""
shouldShowDebugInfo = true
level = 0
maxLevel = 10
shouldAllowInfiniteLevels = false
costStat = ExtResource("1_6lk0n")
costs = Array[int]([100])
shouldUseLastCostForHigherLevels = true
requiredUpgrades = Array[ExtResource("2_huadx")]([ExtResource("4_i0e1k")])
mutuallyExclusiveUpgrades = Array[StringName]([&"ammo"])
