[gd_resource type="Resource" script_class="Upgrade" load_steps=5 format=3 uid="uid://cvchx637umpi8"]

[ext_resource type="Resource" uid="uid://cs65uuef7fi0x" path="res://Tests/UpgradeTest/UpgradeTestMoneyStat.tres" id="1_2b5u0"]
[ext_resource type="Script" path="res://Resources/Upgrade.gd" id="1_sqp8x"]
[ext_resource type="Resource" uid="uid://ha75hcisu4qg" path="res://Tests/UpgradeTest/UpgradeTestGunUpgrade.tres" id="3_80s13"]

[sub_resource type="GDScript" id="GDScript_25atj"]
script/source = "func onUpgrade_didAcquireOrLevelUp(upgrade: Upgrade, entity: Entity) -> bool:
	Debug.printLog(str(\"onUpgrade_didAcquireOrLevelUp() upgrade: \", upgrade, \", entity: \", entity), str(self))
	var ammo: Stat = entity.getComponent(StatsComponent).getStat(&\"ammo\")
	ammo.max += 10; ammo.setToMax()
	return true
"

[resource]
script = ExtResource("1_sqp8x")
name = &"ammo"
displayName = "AMMO"
payload = SubResource("GDScript_25atj")
description = ""
shouldShowDebugInfo = true
level = 0
maxLevel = 0
shouldAllowInfiniteLevels = true
costStat = ExtResource("1_2b5u0")
costs = Array[int]([50])
shouldUseLastCostForHigherLevels = true
requiredUpgrades = Array[ExtResource("1_sqp8x")]([ExtResource("3_80s13")])
mutuallyExclusiveUpgrades = Array[StringName]([&"cooldown"])
